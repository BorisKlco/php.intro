SELECT
LIMIT
WHERE  NOT =, !=, <>, 
AND, OR, XOR, ( )
WHERE x IS NULL, IS NOT NULL
x LIKE '%something%'
x LIKE '%_omething%'
range <, >, <= ,>=
BETWEEN x AND y
ORDER BY x ASC, DESC
----------------------------------------
-Aggregate Functions:
COUNT, AVG, MIN, MAX, SUM, DISTINCT
SELECT AVG(x) FROM y --> ROUND(AVG(), 2)  
SELECT x AS "custom name"
COUNT(*) = count rows
----------------------------------------
-Relationship:
One to one
One to many
Many to many
-Entity Relationship Diagrams(ET Diagram):
https://imgur.com/cSFnFA6
----------------------------------------
Subqueries:
SELECT "title" FROM "books"
WHERE "publisher_id" = (
      SELECT "id" FROM "publishers"
      WHERE "puublisher" = "Name"
);
IN (in set, more, range): 
SELECT "title" FROM "books" WHERE "id" IN (
    SELECT "book_id" FROM "authored"
    WHERE "author_id" = (
        SELECT "id" FROM "authors" WHERE "name" = "name"
     )
):
----------------------------------------
INNER,LEFT,RIGHT,FULL, NATURAL JOIN
SELECT * FROM "sea_lions"
LEFT JOIN "migrations" ON "migrations"."id" = "sea_lions"."id";
----------------------------------------
SETS:
A INTERSECT B / A∩B={x∣x∈A and x∈B}
A UNION B / A∪B={x∣x∈A or x∈B}
A EXCEPT B / A−B={x∣x∈A and x∉B}
----------------------------------------
GROUPS:
SELECT "book_id", AVG("rating") AS "avg_rating"
FROM "ratings"
GROUP BY "book_id";
HAVING "average rating" > 4.0 (having = where for groups)
ORDER BY "avg_rating" DESC;